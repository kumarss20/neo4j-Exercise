scalar Point
scalar DateTime
scalar PointInput

type Employee {
  name: String
  user_name: ID!
  email: String
  phone: String
}

type Query {
  searchEmpoyee(term:String!):[Employee]
    @cypher(
      statement: """
      CALL db.index.fulltext.queryNodes('employeeFTI', $term) YIELD node, score
      RETURN node
      """
    )
}

type Mutation {
  mergeEmployee(name: String!, user_name: ID!, email: String, phone: String): Employee
    @cypher(
      statement: """
      MERGE (e:Employee {user_name: $user_name})
      SET e.name = $name,
          e.email = $email,
          e.phone = $phone
      RETURN e
      """
    )
  deleteEmployee(user_name: ID!): String
    @cypher(
      statement: """
      MATCH (e:Employee {user_name: toString($user_name)})
      DETACH DELETE e
      RETURN 'Successfully deleted' as message
      """
    )
}